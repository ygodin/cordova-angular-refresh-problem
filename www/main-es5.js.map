{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","httpClient","cdRef","title","state","loading","name","visible","context$","asObservable","next","get","subscribe","data","loadData","toggle","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error","window","document","addEventListener","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cordova-angular';\n  private state = new BehaviorSubject({loading: false, name: null});\n  public context$: Observable<{loading: boolean; name: string}>;\n  public visible = true;\n\n  constructor(private readonly httpClient: HttpClient, private cdRef: ChangeDetectorRef) {\n    this.context$ = this.state.asObservable();\n  }\n\n  // Toggling will force a refresh\n  toggle() {\n    this.visible = !this.visible;\n  }\n\n  loadData() {\n    this.state.next({loading: true, name: null});\n    this.httpClient.get<any>('http://www.mocky.io/v2/5ecc09f73000008894dddacd').subscribe(data => {\n      this.state.next({loading: false, name: 'REFRESH DONE'});\n    })\n  }\n}\n","<div style=\"padding-top: 50px;\">\n  <div *ngIf=\"visible\">\n    <div *ngIf=\"(context$ | async)?.loading\">LOADING</div>\n    <div *ngIf=\"(context$ | async)?.name as name\">{{name}}</div>\n  </div>\n  <button (click)=\"loadData()\">HTTPCall</button>\n  <button (click)=\"toggle()\">toggle</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n// tslint:disable-next-line: no-string-literal\nif (typeof window['cordova'] !== 'undefined') {\n  document.addEventListener('deviceready', () => {\n    console.log('deviceready');\n    bootstrap();\n  }, false);\n} else {\n  console.log('devicereadyNOT');\n  bootstrap();\n}"]}